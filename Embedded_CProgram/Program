Embedded C Program : 

#include <DHT.h> // Including library for dht
#include <ESP8266WiFi.h>
int LED = 10;
int MQ4 = 2;
int buzzer = 2;
int smokeA0 = A0;
int threshold_value;
int AO_Out;
// Your threshold value. You might need to change it.
String apiKey = "SXHAIIHSIWBOYQLE"; // Enter your Write API key from ThingSpeak
const char *ssid = "Off link"; // replace with your wifi ssid and wpa2 key
const char *pass = "123456789";
const char* server = "api.thingspeak.com";
#define DHTPIN 0 //pin where the dht11 is connected
//
DHT dht(DHTPIN, DHT11);
WiFiClient client;
void setup()
{
pinMode(buzzer, OUTPUT);
pinMode(LED, OUTPUT);
pinMode(smokeA0, INPUT);
pinMode(MQ4, INPUT);
Serial.begin(9600);
Serial.print("HII11111");
delay(10);
dht.begin();
Serial.println("Connecting to ");
Serial.println(ssid);

WiFi.begin(ssid, pass);
while (WiFi.status() != WL_CONNECTED)
{
delay(500);
Serial.print(".");
}
Serial.println("");
Serial.println("WiFi connected");

}
void loop()
{
mq4_Sensor();
Serial.print("HII11112");
// int analogSensor1 = digitalRead(MQ4);
float h = dht.readHumidity();
float t = dht.readTemperature();
// int analogSensor = analogRead(smokeA0);
Serial.print("Pin A0: ");
// Serial.println(analogSensor);
delay(100);
Serial.print("Pin A1: ");
// Serial.println(analogSensor1);
digitalWrite(LED, HIGH);
if (isnan(h) || isnan(t))
{
Serial.println("Failed to read from DHT sensor!");
return;
}
if (client.connect(server, 80)) // "184.106.153.149" or api.thingspeak.com
{
String postStr = apiKey;
postStr += "&field1=";
postStr += String(t);
postStr += "&field2=";
postStr += String(h);
postStr += "&field3=";
postStr += String(AO_Out);
postStr += "\r\n\r\n";
client.print("POST /update HTTP/1.1\n");
client.print("Host: api.thingspeak.com\n");
client.print("Connection: close\n");
client.print("X-THINGSPEAKAPIKEY: " + apiKey + "\n");
client.print("Content-Type: application/x-www-form-urlencoded\n");
client.print("Content-Length: ");
client.print(postStr.length());
client.print("\n\n");
// digitalWrite(LED, LOW);
client.print(postStr);
Serial.print("Temperature: ");
Serial.print(t);
Serial.print(" degrees Celcius, Humidity: ");
Serial.print(h);
Serial.println("%. Send to Thingspeak.");

}
client.stop();
Serial.println("Waiting...");
// thingspeak needs minimum 15 sec delay between updates
delay(1000);
}
void mq4_Sensor()
{
AO_Out = analogRead(MQ4); // Take Analog output measurement sample from AO pin of
MQ4 sensor
//Read digital output of MQ4 sensor
Serial.print("Methane Conentration: ");
Serial.println(AO_Out);//prints the methane value
//prints the threshold_value reached as either LOW or HIGH (above or underneath)
delay(100);
}
